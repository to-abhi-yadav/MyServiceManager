import { Injectable } from '@angular/core';
import { saveAs } from 'file-saver';
import * as i0 from "@angular/core";
export class FileSaverService {
    genType(fileName) {
        if (!fileName || fileName.lastIndexOf('.') === -1)
            return 'text/plain';
        const type = fileName.substr(fileName.lastIndexOf('.') + 1);
        switch (type) {
            case 'txt':
                return 'text/plain';
            case 'xml':
            case 'html':
                return `text/${type}`;
            case 'json':
                return 'octet/stream';
            default:
                return `application/${type}`;
        }
    }
    save(blob, fileName, filtType) {
        if (!blob) {
            throw new Error('Muse spcify blod argument');
        }
        saveAs(new Blob([blob], { type: filtType || blob.type || this.genType(fileName) }), decodeURI(fileName || 'download'));
    }
    saveText(txt, fileName) {
        const blob = new Blob([txt]);
        this.save(blob, fileName);
    }
}
FileSaverService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
FileSaverService.ngInjectableDef = i0.defineInjectable({ factory: function FileSaverService_Factory() { return new FileSaverService(); }, token: FileSaverService, providedIn: "root" });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXNhdmVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZmlsZXNhdmVyLyIsInNvdXJjZXMiOlsic3JjL2ZpbGVzYXZlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQzs7QUFHcEMsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQixPQUFPLENBQUMsUUFBaUI7UUFDdkIsSUFBSSxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUFFLE9BQU8sWUFBWSxDQUFDO1FBQ3ZFLE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1RCxRQUFRLElBQUksRUFBRTtZQUNaLEtBQUssS0FBSztnQkFDUixPQUFPLFlBQVksQ0FBQztZQUN0QixLQUFLLEtBQUssQ0FBQztZQUNYLEtBQUssTUFBTTtnQkFDVCxPQUFPLFFBQVEsSUFBSSxFQUFFLENBQUM7WUFDeEIsS0FBSyxNQUFNO2dCQUNULE9BQU8sY0FBYyxDQUFDO1lBQ3hCO2dCQUNFLE9BQU8sZUFBZSxJQUFJLEVBQUUsQ0FBQztTQUNoQztJQUNILENBQUM7SUFFRCxJQUFJLENBQUMsSUFBVSxFQUFFLFFBQWlCLEVBQUUsUUFBaUI7UUFDbkQsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQTJCLENBQUMsQ0FBQztTQUM5QztRQUVELE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxRQUFRLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQztJQUN6SCxDQUFDO0lBRUQsUUFBUSxDQUFDLEdBQVcsRUFBRSxRQUFpQjtRQUNyQyxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDNUIsQ0FBQzs7O1lBN0JGLFVBQVUsU0FBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzYXZlQXMgfSBmcm9tICdmaWxlLXNhdmVyJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBGaWxlU2F2ZXJTZXJ2aWNlIHtcbiAgZ2VuVHlwZShmaWxlTmFtZT86IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKCFmaWxlTmFtZSB8fCBmaWxlTmFtZS5sYXN0SW5kZXhPZignLicpID09PSAtMSkgcmV0dXJuICd0ZXh0L3BsYWluJztcbiAgICBjb25zdCB0eXBlID0gZmlsZU5hbWUuc3Vic3RyKGZpbGVOYW1lLmxhc3RJbmRleE9mKCcuJykgKyAxKTtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ3R4dCc6XG4gICAgICAgIHJldHVybiAndGV4dC9wbGFpbic7XG4gICAgICBjYXNlICd4bWwnOlxuICAgICAgY2FzZSAnaHRtbCc6XG4gICAgICAgIHJldHVybiBgdGV4dC8ke3R5cGV9YDtcbiAgICAgIGNhc2UgJ2pzb24nOlxuICAgICAgICByZXR1cm4gJ29jdGV0L3N0cmVhbSc7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gYGFwcGxpY2F0aW9uLyR7dHlwZX1gO1xuICAgIH1cbiAgfVxuXG4gIHNhdmUoYmxvYjogQmxvYiwgZmlsZU5hbWU/OiBzdHJpbmcsIGZpbHRUeXBlPzogc3RyaW5nKTogdm9pZCB7XG4gICAgaWYgKCFibG9iKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ011c2Ugc3BjaWZ5IGJsb2QgYXJndW1lbnQnKTtcbiAgICB9XG5cbiAgICBzYXZlQXMobmV3IEJsb2IoW2Jsb2JdLCB7IHR5cGU6IGZpbHRUeXBlIHx8IGJsb2IudHlwZSB8fCB0aGlzLmdlblR5cGUoZmlsZU5hbWUpIH0pLCBkZWNvZGVVUkkoZmlsZU5hbWUgfHwgJ2Rvd25sb2FkJykpO1xuICB9XG5cbiAgc2F2ZVRleHQodHh0OiBzdHJpbmcsIGZpbGVOYW1lPzogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFt0eHRdKTtcbiAgICB0aGlzLnNhdmUoYmxvYiwgZmlsZU5hbWUpO1xuICB9XG59XG4iXX0=