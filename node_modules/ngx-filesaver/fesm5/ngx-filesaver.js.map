{"version":3,"file":"ngx-filesaver.js.map","sources":["ng://ngx-filesaver/src/filesaver.service.ts","ng://ngx-filesaver/src/filesaver.directive.ts","ng://ngx-filesaver/src/filesaver.module.ts","ng://ngx-filesaver/ngx-filesaver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Injectable({ providedIn: 'root' })\nexport class FileSaverService {\n  genType(fileName?: string): string {\n    if (!fileName || fileName.lastIndexOf('.') === -1) return 'text/plain';\n    const type = fileName.substr(fileName.lastIndexOf('.') + 1);\n    switch (type) {\n      case 'txt':\n        return 'text/plain';\n      case 'xml':\n      case 'html':\n        return `text/${type}`;\n      case 'json':\n        return 'octet/stream';\n      default:\n        return `application/${type}`;\n    }\n  }\n\n  save(blob: Blob, fileName?: string, filtType?: string): void {\n    if (!blob) {\n      throw new Error('Muse spcify blod argument');\n    }\n\n    saveAs(new Blob([blob], { type: filtType || blob.type || this.genType(fileName) }), decodeURI(fileName || 'download'));\n  }\n\n  saveText(txt: string, fileName?: string): void {\n    const blob = new Blob([txt]);\n    this.save(blob, fileName);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  HostListener,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { FileSaverService } from './filesaver.service';\n\n@Directive({\n  selector: '[fileSaver]',\n  exportAs: 'fileSaver'\n})\nexport class FileSaverDirective {\n  @Input() method = 'GET';\n  @Input() http: Observable<HttpResponse<Blob>>;\n  @Input() query: any;\n  @Input() header: any;\n  @Input() url: string;\n  @Input() fileName: string;\n  @Output() readonly success = new EventEmitter<any>();\n  @Output() readonly error = new EventEmitter<any>();\n\n  constructor(\n    private el: ElementRef,\n    private _FileSaverService: FileSaverService,\n    private _httpClient: HttpClient,\n  ) {}\n\n  private getName(res: HttpResponse<Blob>) {\n    return decodeURI(\n      this.fileName ||\n      res.headers.get('filename') ||\n      res.headers.get('x-filename')\n    );\n  }\n\n  @HostListener('click')\n  _click() {\n    let _http = this.http;\n    if (!_http) {\n      const params = new HttpParams(),\n        _data = this.query || {};\n      // tslint:disable-next-line:forin\n      for (const item in _data) {\n        params.set(item, _data[item]);\n      }\n\n      _http = this._httpClient.request(this.method, this.url, {\n        observe: 'response',\n        responseType: 'blob',\n        headers: this.header,\n        params\n      });\n    }\n\n    this.el.nativeElement.disabled = true;\n    _http.subscribe(\n      res => {\n        if (res.status !== 200 || res.body.size <= 0) {\n          this.error.emit(res);\n          return;\n        }\n        this._FileSaverService.save(res.body, this.getName(res));\n        this.success.emit(res);\n      },\n      err => {\n        this.error.emit(err);\n      },\n      () => {\n        this.el.nativeElement.disabled = false;\n      },\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSaverDirective } from './filesaver.directive';\n\n@NgModule({\n  declarations: [FileSaverDirective],\n  exports: [FileSaverDirective],\n})\nexport class FileSaverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
