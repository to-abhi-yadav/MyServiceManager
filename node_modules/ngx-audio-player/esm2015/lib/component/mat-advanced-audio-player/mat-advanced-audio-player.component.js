/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild } from '@angular/core';
import { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';
import { MatPaginator, MatTableDataSource } from '@angular/material';
import { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';
export class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions {
    /**
     * @param {?} playlistService
     */
    constructor(playlistService) {
        super();
        this.playlistService = playlistService;
        this.displayedColumns = ['title', 'status'];
        this.dataSource = new MatTableDataSource();
        this.displayTitle = true;
        this.displayPlaylist = true;
        this.pageSizeOptions = [10, 20, 30];
        this.expanded = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setDataSourceAttributes();
        this.bindPlayerEvent();
        this.player.nativeElement.addEventListener('ended', () => {
            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
                this.nextSong();
            }
        });
        this.playlistService.setPlaylist(this.playlistData);
        this.playlistService.getSubjectCurrentTrack().subscribe((playlistTrack) => {
            this.playlistTrack = playlistTrack;
        });
        this.player.nativeElement.currentTime = 0;
        this.playlistService.init();
    }
    /**
     * @param {?} mp
     * @return {?}
     */
    set matPaginator(mp) {
        this.paginator = mp;
        this.setDataSourceAttributes();
    }
    /**
     * @return {?}
     */
    setDataSourceAttributes() {
        /** @type {?} */
        let index = 1;
        if (this.playlistData) {
            this.playlistData.forEach(data => {
                data.index = index++;
            });
            this.dataSource = new MatTableDataSource(this.playlistData);
            this.dataSource.paginator = this.paginator;
        }
    }
    /**
     * @return {?}
     */
    nextSong() {
        if (((this.playlistService.indexSong + 1) % this.paginator.pageSize) === 0 ||
            (this.playlistService.indexSong + 1) === this.paginator.length) {
            if (this.paginator.hasNextPage()) {
                this.paginator.nextPage();
            }
            else if (!this.paginator.hasNextPage()) {
                this.paginator.firstPage();
            }
        }
        this.currentTime = 0;
        this.duration = 0.01;
        this.playlistService.nextSong();
        this.play();
    }
    ;
    /**
     * @return {?}
     */
    previousSong() {
        this.currentTime = 0;
        this.duration = 0.01;
        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
            if (((this.playlistService.indexSong) % this.paginator.pageSize) === 0 ||
                (this.playlistService.indexSong) === 0) {
                if (this.paginator.hasPreviousPage()) {
                    this.paginator.previousPage();
                }
                else if (!this.paginator.hasPreviousPage()) {
                    this.paginator.lastPage();
                }
            }
            this.playlistService.previousSong();
        }
        else {
            this.resetSong();
        }
        this.play();
    }
    ;
    /**
     * @return {?}
     */
    resetSong() {
        this.player.nativeElement.src = this.playlistTrack[1].link;
    }
    ;
    /**
     * @param {?} index
     * @return {?}
     */
    selectTrack(index) {
        console.log('selectTrack(index: number): void: ' + index);
        this.playlistService.selectATrack(index);
        setTimeout(() => {
            this.player.nativeElement.play();
        }, 0);
    }
    ;
    /**
     * @return {?}
     */
    checkIfSongHasStartedSinceAtleastTwoSeconds() {
        return this.player.nativeElement.currentTime > 2;
    }
    ;
    /**
     * @param {?} playlist
     * @return {?}
     */
    set playlist(playlist) {
        this.playlistData = playlist;
        this.ngOnInit();
    }
}
MatAdvancedAudioPlayerComponent.decorators = [
    { type: Component, args: [{
                selector: 'mat-advanced-audio-player',
                template: "<mat-card class=\"row d-flex justify-content-center ngx-advanced-audio-player\" style=\"margin: 0px;\">\n  <audio [src]=\"playlistTrack[1].link\" #audioPlayer></audio>\n\n  <button mat-button class=\"p-1\" style=\"border-left: 1px solid #ddd;\" (click)='previousSong();' [disabled]=\"loaderDisplay\">\n    <fa-icon class=\"fa fa-lg\" [icon]=\"['fas','step-backward']\" aria-hidden=\"true\"></fa-icon>\n  </button>\n  <button mat-button class=\"p-1\" (click)='playBtnHandler();' style=\"border-left: 2px solid #ccc; border-right: 2px solid #ccc;\"\n    [disabled]=\"loaderDisplay\">\n    <fa-icon *ngIf=\"loaderDisplay\" title=\"loading...\" class=\"fa fa-2x loading-track\" [pulse]=\"true\" [icon]=\"['fas','spinner']\"\n      aria-hidden=\"true\"></fa-icon>\n    <fa-icon *ngIf=\"!loaderDisplay && !isPlaying\" class=\"fa fa-2x play-track\" style=\"color:#444\" [icon]=\"['fas','play']\"\n      aria-hidden=\"true\"></fa-icon>\n    <fa-icon *ngIf=\"!loaderDisplay && isPlaying\" class=\"fa fa-2x pause-track\" style=\"color:#444\" [icon]=\"['fas','pause']\"\n      aria-hidden=\"true\"></fa-icon>\n  </button>\n  <button mat-button class=\"p-1\" style=\"border-right: 1px solid #ddd;\" (click)='nextSong();' [disabled]=\"loaderDisplay\">\n    <fa-icon class=\"fa fa-lg next-track\" [icon]=\"['fas','step-forward']\" aria-hidden=\"true\"></fa-icon>\n  </button>\n\n  <div class=\"col\">\n    <div class=\"d-flex flex-fill\">\n      <div class=\"py-3 px-1\" style=\"font-size: 12px\">\n        <span *ngIf=\"duration !== 0.01\">\n          {{currentTime | secondsToMinutes}}\n        </span>\n      </div>\n      <mat-slider class=\"flex-fill p-1\" style=\"width: 100%\" min=\"0\" max=\"{{duration}}\" value=\"{{currentTime}}\" (change)=\"currTimePosChanged($event)\"></mat-slider>\n\n      <div class=\"py-3 px-1\" style=\"font-size: 12px; text-align: right\">\n        <span *ngIf=\"duration !== 0.01\">\n          -{{duration-currentTime | secondsToMinutes }}\n        </span>\n      </div>\n    </div>\n  </div>\n\n</mat-card>\n\n<mat-card class=\"ngx-advanced-audio-player-title\" *ngIf=\"displayTitle\" style=\"border: 1px solid #ddd; box-shadow: none;\">\n  <div class=\"p-1\" style=\"text-align: center;\">\n    <div style=\"padding:1px 3px;\">\n      <span *ngIf=\"!isPlaying\">{{ playlistTrack[1].title }}</span>\n      <marquee *ngIf=\"isPlaying\" behavior=\"scroll\" direction=\"left\">{{ playlistTrack[1].title }}</marquee>\n    </div>\n    <div class=\"clear\"></div>\n  </div>\n</mat-card>\n\n<mat-accordion *ngIf=\"displayPlaylist\">\n  <mat-expansion-panel class=\"ngx-advanced-audio-player-playlist\" [expanded]=\"expanded\">\n    <mat-expansion-panel-header>\n      Play List\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z6\">\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef> Title </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"selectTrack(element.index)\"> {{element.title}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"playlistTrack[1].title === element.title\">\n            <fa-icon *ngIf=\"isPlaying\" class=\"fa\" [icon]=\"['fas','play']\" [spin]=\"true\" aria-hidden=\"true\"></fa-icon>\n            <fa-icon *ngIf=\"!isPlaying\" class=\"fa\" [icon]=\"['fas','play']\" aria-hidden=\"true\"></fa-icon>\n          </div>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr class=\"mat-select-content\" mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n  </mat-expansion-panel>\n</mat-accordion>",
                styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card{padding:0!important}mat-slider{max-height:30px}table{width:100%}button:focus,button:hover{outline:0!important}.ngx-advanced-audio-player,.ngx-advanced-audio-player-playlist,.ngx-advanced-audio-player-title{min-width:225px}"]
            }] }
];
/** @nocollapse */
MatAdvancedAudioPlayerComponent.ctorParameters = () => [
    { type: AudioPlayerService }
];
MatAdvancedAudioPlayerComponent.propDecorators = {
    displayTitle: [{ type: Input }],
    displayPlaylist: [{ type: Input }],
    pageSizeOptions: [{ type: Input }],
    expanded: [{ type: Input }],
    matPaginator: [{ type: ViewChild, args: [MatPaginator,] }],
    playlist: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.displayedColumns;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.timeLineDuration;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.dataSource;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.paginator;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.playlistData;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.displayTitle;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.displayPlaylist;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.pageSizeOptions;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.expanded;
    /** @type {?} */
    MatAdvancedAudioPlayerComponent.prototype.playlistTrack;
    /**
     * @type {?}
     * @private
     */
    MatAdvancedAudioPlayerComponent.prototype.playlistService;
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
    /* Skipping unhandled member: ;*/
}
//# sourceMappingURL=data:application/json;base64,