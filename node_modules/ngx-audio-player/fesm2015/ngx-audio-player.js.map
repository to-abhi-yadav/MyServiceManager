{"version":3,"file":"ngx-audio-player.js.map","sources":["ng://ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ng://ngx-audio-player/lib/component/base/base-audio-player-components.ts","ng://ngx-audio-player/lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component.ts","ng://ngx-audio-player/lib/component/mat-basic-audio-player/mat-basic-audio-player.component.ts","ng://ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ng://ngx-audio-player/lib/ngx-audio-player.module.ts","ng://ngx-audio-player/lib/model/track.model.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable()\nexport class AudioPlayerService {\n\n  playlist: Track[] = [];\n\n  indexSong: number = 0;\n  currentTrack: BehaviorSubject<{}> = new BehaviorSubject(this.playlist[this.indexSong]);\n  currentTime: number = 0;\n  duration: number = 0;\n\n  constructor() {\n\n  };\n\n  init(): void {\n    this.updateCurrentSong();\n  };\n\n  nextSong(): void {\n    if ((this.indexSong + 1) >= this.playlist.length) {\n      this.indexSong = 0;\n    } else {\n      this.indexSong++;\n    }\n    this.updateCurrentSong();\n  };\n\n  previousSong(): void {\n    if ((this.indexSong - 1) < 0) {\n      this.indexSong = (this.playlist.length - 1);\n    } else {\n      this.indexSong--;\n    }\n    this.updateCurrentSong();\n  };\n\n  resetPlaylist(): void {\n    this.indexSong = 0;\n    this.updateCurrentSong();\n  };\n\n  selectATrack(index: number): void {\n    this.indexSong = index - 1;\n    this.updateCurrentSong();\n  };\n\n  updateCurrentSong(): void {\n    let current = this.playlist[this.indexSong];\n    let previous = ((this.indexSong - 1) >= 0) ? this.playlist[this.indexSong - 1] : this.playlist[this.playlist.length - 1];\n    let next = ((this.indexSong + 1) >= this.playlist.length) ? this.playlist[0] : this.playlist[this.indexSong + 1];\n  \n    this.currentTrack.next([\n      previous,\n      current,\n      next\n    ]);\n  };\n\n  getSubjectCurrentTrack(): BehaviorSubject<{}> {\n    return this.currentTrack;\n  };\n\n  getPlaylist(): Track[] {\n    return this.playlist;\n  };\n\n  setPlaylist(playlist: Track[]) {\n    this.playlist = playlist;\n  }\n\n  getIndexSong () {\n    return this.indexSong;\n  }\n}","import { ViewChild, ElementRef } from \"@angular/core\";\nimport { MatSlider } from \"@angular/material\";\n\nexport class BaseAudioPlayerFunctions {\n\n    @ViewChild('audioPlayer') player: ElementRef;\n    timeLineDuration: MatSlider;\n\n    loaderDisplay: boolean = false;\n    isPlaying: boolean = false;\n    currentTime: number = 0;\n    duration: number = 0.01;\n    \n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n        });\n        this.player.nativeElement.addEventListener('loadstart', () => {\n            this.loaderDisplay = true;\n        });\n        this.player.nativeElement.addEventListener('loadeddata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n    };\n\n    playBtnHandler(): void {\n        if(this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            this.player.nativeElement.play(this.currentTime);\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    };\n\n    play(): void {\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 0);\n    };\n\n}","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { MatSlider, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Track } from '../../model/track.model';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';\n\n@Component({\n    selector: 'mat-advanced-audio-player',\n    templateUrl: './mat-advanced-audio-player.component.html',\n    styleUrls: ['./mat-advanced-audio-player.component.css']\n})\nexport class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    displayedColumns: string[] = ['title', 'status'];\n    timeLineDuration: MatSlider;\n\n    dataSource = new MatTableDataSource<Track>();\n\n    paginator: MatPaginator;\n\n    playlistData: Track[];\n\n    @Input()\n    displayTitle = true;\n\n    @Input()\n    displayPlaylist = true;\n\n    @Input()\n    pageSizeOptions = [10, 20, 30];\n\n    @Input()\n    expanded = true;\n\n    playlistTrack: any;\n\n    constructor(private playlistService: AudioPlayerService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.setDataSourceAttributes();\n        this.bindPlayerEvent();\n        this.player.nativeElement.addEventListener('ended', () => {\n            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n                this.nextSong();\n            }\n        });\n        this.playlistService.setPlaylist(this.playlistData);\n        this.playlistService.getSubjectCurrentTrack().subscribe((playlistTrack) => {\n            this.playlistTrack = playlistTrack;\n        });\n        this.player.nativeElement.currentTime = 0;\n        this.playlistService.init();\n    }\n\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.playlistData) {\n            this.playlistData.forEach(data => {\n                data.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.playlistData);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (((this.playlistService.indexSong + 1) % this.paginator.pageSize) === 0 ||\n            (this.playlistService.indexSong + 1) === this.paginator.length) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        this.playlistService.nextSong();\n        this.play();\n    };\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (((this.playlistService.indexSong) % this.paginator.pageSize) === 0 ||\n                (this.playlistService.indexSong) === 0) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();\n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            this.playlistService.previousSong();\n        } else {\n            this.resetSong();\n        }\n        this.play();\n    };\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.playlistTrack[1].link;\n    };\n\n    selectTrack(index: number): void {\n        console.log('selectTrack(index: number): void: ' + index);\n        this.playlistService.selectATrack(index);\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 0);\n    };\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    };\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.playlistData = playlist;\n        this.ngOnInit();\n    }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';\n\n@Component({\n    selector: 'mat-basic-audio-player',\n    templateUrl: './mat-basic-audio-player.component.html',\n    styleUrls: ['./mat-basic-audio-player.component.css']\n})\nexport class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    @Input()\n    title: string;\n    \n    @Input()\n    audioUrl: string;\n\n    @Input()\n    displayTitle = false;\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n        this.bindPlayerEvent();\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.audioUrl;\n    };\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({name: 'secondsToMinutes'})\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        let minutes = (\"0\" + Math.floor(time / 60)).slice(-2);\n        let seconds = (\"0\" + time % 60).slice(-2);\n        return `${minutes}:${seconds}`;\n    }\n}","import { NgModule } from '@angular/core';\nimport { MatButtonModule, MatCardModule, MatIconModule, MatSliderModule, MatExpansionModule, MatFormFieldModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\nimport { MatBasicAudioPlayerComponent } from './component/mat-basic-audio-player/mat-basic-audio-player.component';\nimport { AudioPlayerService } from './service/audio-player-service/audio-player.service';\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\nimport { MatAdvancedAudioPlayerComponent } from './component/mat-advanced-audio-player/mat-advanced-audio-player.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPlay, faPause, faSpinner, faStepForward, faStepBackward\n} from '@fortawesome/free-solid-svg-icons';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [MatBasicAudioPlayerComponent, SecondsToMinutesPipe, MatAdvancedAudioPlayerComponent],\n  imports: [CommonModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule, \n    MatSliderModule, MatExpansionModule, MatPaginatorModule, FormsModule, FontAwesomeModule],\n  exports: [MatBasicAudioPlayerComponent, MatAdvancedAudioPlayerComponent],\n  providers: [AudioPlayerService]\n})\nexport class NgxAudioPlayerModule {\n  constructor() {\n    // Icons for User Favorite Page\n    library.add(faPlay, faPause, faSpinner, faStepForward, faStepBackward);\n  }\n}","export class Track {\n    index?: number;\n    link: string;\n    title: string;\n}"],"names":[],"mappings":"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"}
